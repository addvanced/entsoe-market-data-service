plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'org.openapi.generator' version '6.2.0'
	id 'com.github.edeandrea.xjc-generation' version "1.6"
	id 'io.freefair.lombok' version '6.5.1'
	id 'java'
}

group = 'dk.systemedz.entsoe'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

jar.enabled = false

ext {
	set('springCloudVersion', "2021.0.3")
	set('mapstructVersion', "1.5.2.Final")
	set('jaxbVersion', '2.3.1')
}
dependencies {

	// Spring Framework
	implementation ('org.springframework.boot:spring-boot-starter-web') {
		exclude module: "spring-boot-starter-tomcat"
	}
	implementation ('org.springframework.boot:spring-boot-starter-undertow') {
		exclude module: "undertow-websockets-jsr"
	}
	implementation 'org.springframework.cloud:spring-cloud-starter'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.flywaydb:flyway-core:9.4.0'

	// OpenAPI
	implementation('io.swagger:swagger-annotations:1.6.7') // Required to generate RestTemplate Client.
	implementation('io.swagger.core.v3:swagger-annotations:2.2.3')
	implementation('org.springdoc:springdoc-openapi-common:1.6.11')
	implementation('org.openapitools:jackson-databind-nullable:0.2.3')
	implementation('com.google.code.findbugs:jsr305:3.0.2')

	// JSON/XML
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0-rc1'
	implementation 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.13.4'

	// ENTSO-E XML
	implementation 'javax.activation:activation:1.1.1'
	implementation "javax.xml.bind:jaxb-api:${jaxbVersion}"

	xjc "javax.xml.bind:jaxb-api:${jaxbVersion}"
	xjc "com.sun.xml.bind:jaxb-xjc:${jaxbVersion}"
	xjc "com.sun.xml.bind:jaxb-impl:${jaxbVersion}"
	xjc 'com.sun.istack:istack-commons-runtime:4.1.1'


	// Mapstruct
	compileOnly "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	// OPS / IO
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// Commons
	implementation("com.google.guava:guava:31.1-jre")

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
	filter {
		includeTestsMatching "*Test"
		excludeTest("*IT","*")
	}
}

tasks.withType(JavaCompile) {
	options.warnings = false
	options.encoding = 'UTF-8'
}

openApiGenerate {
	generatorName.set("spring")

	validateSpec.set(false)

	inputSpec.set("$projectDir/src/main/resources/openapi/entsoe-price-service-api-v1.yml")
	configFile.set("$projectDir/src/main/resources/openapi/entsoe-price-service-api-v1-config.yml")
	outputDir.set("$buildDir/generated")

	globalProperties.set( [models: "", apis: "", supportingFiles: "ApiUtil.java"] )
}

xjcGeneration {
	defaultAdditionalXjcOptions = ['encoding': 'UTF-8']

	schemas {
		EntsoeIEC62325 {
			schemaRootDir = "$projectDir/src/main/resources/entsoe/xsd"
			schemaFile = "iec62325-451-3-publication_v7_0.xsd"
			javaPackageName = 'com.systemedz.entsoe.xsd.iec62325'
			generatedOutputRootDir = file "$buildDir/generated"
		}
	}
}

compileJava {
	options.annotationProcessorPath = configurations.annotationProcessor
	dependsOn tasks.openApiGenerate
}

sourceSets.main.java.srcDir "$buildDir/generated/src/main/java"
lombok.setDisableConfig(true)